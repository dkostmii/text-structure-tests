т = "Привіт від Лесі!"

номер_тесту = 1

;; твердження чи тестовий випадок (як зручніше ;)
дія тв(очікується, фактично)
  успішно = фактично рівно очікується

  вивести("%(номер_тесту).")
  якщо (успішно)
    друк("[успішно]")
  інакше
    друк("[тест провалився]")
  кінець

  номер_тесту := номер_тесту + 1

  друк("Очікується: %(очікується)")
  друк("Фактично: %(фактично)")
  друк("")
кінець

дія іт(сценарій Дія)
  спробувати
    сценарій()
  зловити п
    друк("%(номер_тесту). [Зловлено очікувану помилку]: %(п)")
    друк("%(номер_тесту). [успішно]")
    номер_тесту := номер_тесту + 1
    вернути
  кінець

  друк("%(номер_тесту). [провалено]")
  номер_тесту := номер_тесту + 1
кінець

друк("Тести на відповідність тверджень.")

;; використовуємо правильно
тв(16, т.довжина())
тв("П", т.символ(позиція=0))
тв("!", т[15])
тв(1090, т.код_символу(позиція=5))
тв(7, т.позиція(значення="від"))
тв("Привіт від Лесі!Привіт від Лесі!", т.повторити(кількість=2))

т_плюс_т = т + т
знайти = " від Лесі"
замінити_на = ", Світе"

тв("Привіт, Світе!Привіт від Лесі!", т_плюс_т.замінити_перше(старе_значення=знайти, нове_значення=замінити_на))
тв("Привіт, Світе!Привіт від Лесі!", т_плюс_т.замінити_перше(нове_значення=замінити_на, старе_значення=знайти))
тв("Привіт, Світе!Привіт, Світе!", т_плюс_т.замінити(старе_значення=знайти, нове_значення=замінити_на))
тв("Привіт, Світе!Привіт, Світе!", т_плюс_т.замінити(нове_значення=замінити_на, старе_значення=знайти))
тв("Привіт", т.зрізати(позиція_від=0, позиція_до=6))
тв("Привіт", т.зрізати(позиція_до=6, позиція_від=0))
тв("від Лесі!", т.зрізати(позиція_від=7))
тв("Привіт від Лесі!Привіт від Лесі!Привіт від Лесі!", т.приєднати(а=т, б=т))
тв(текст(["Привіт", "від", "Лесі!"]), текст(т.розділити(роздільник=" ")))
тв(так, т.починається_з(значення="Привіт "))
тв(ні, т.закінчується_на(значення="Лесі"))

ф = "     " + т + "\n\n\r"
ф = ф.обрізати()
тв(т, ф)

якщо т містить "Привіт"
  р := так
інакше
  р := ні
кінець
тв(так, р)

якщо т не містить "0123"
  р := ні
інакше
  р := так
кінець
тв(ні, р)

номер_тесту = 1

друк("Тести ʼза призначеннямʼ")

;; використовуємо "за призначенням"
іт(дія()
  т.символ()
кінець)

іт(дія()
  т.символ(позиція=пусто)
кінець)

іт(дія()
  т.символ(позиція=-222)
кінець)

іт(дія()
  т.символ(позиція=[["Якісь", "дурниці", ":)"], 21])
кінець)

іт(дія()
  т[пусто]
кінець)

іт(дія()
  т[-т.довжина()]
кінець)

іт(дія()
  т.код_символу(позиція=пусто)
кінець)

іт(дія()
  т.код_символу()
кінець)

іт(дія()
  т.код_символу(позиція=-222)
кінець)

іт(дія()
  т.код_символу(позиція=[["Якісь", "дурниці", ":)"], 21])
кінець)

іт(дія()
  т.позиція(значення=пусто)
кінець)

іт(дія()
  т.позиція()
кінець)

іт(дія()
  т.повторити()
кінець)

іт(дія()
  т.повторити(кількість=пусто)
кінець)

іт(дія()
  т.повторити(кількість=-3123131321)
кінець)

іт(дія()
  т.повторити(кількість="Привіт від Лесі!")
кінець)

іт(дія()
  т.замінити_перше(старе_значення=пусто)
кінець)

іт(дія()
  т.замінити_перше()
кінець)

іт(дія()
  т.замінити_перше(старе_значення=пусто, нове_значення="")
кінець)

іт(дія()
  т.замінити_перше(старе_значення=пусто, нове_значення=[[[[1, 2, 3]]]])
кінець)

іт(дія()
  т.замінити_перше(старе_значення=пусто, нове_значення=пусто)
кінець)

іт(дія()
  т.замінити_перше(старе_значення=[[[[1, 2, 3]]]], нове_значення=пусто)
кінець)

іт(дія()
  т.замінити(старе_значення=пусто)
кінець)

іт(дія()
  т.замінити()
кінець)

іт(дія()
  т.замінити(старе_значення=пусто, нове_значення="")
кінець)

іт(дія()
  т.замінити(старе_значення=пусто, нове_значення=[[[[1, 2, 3]]]])
кінець)

іт(дія()
  т.замінити(старе_значення=пусто, нове_значення=пусто)
кінець)

іт(дія()
  т.замінити(старе_значення=[[[[1, 2, 3]]]], нове_значення=пусто)
кінець)

іт(дія()
  т.зрізати()
кінець)

іт(дія()
  т.зрізати(позиція_від=-10, позиція_до=0)
кінець)

іт(дія()
  т.зрізати(позиція_від=100, позиція_до=0)
кінець)

іт(дія()
  т.зрізати(позиція_від=пусто)
кінець)

іт(дія()
  т.зрізати(позиція_від=пусто, позиція_до="ааа")
кінець)

іт(дія()
  т.зрізати(позиція_від=пусто, позиція_до=1)
кінець)

іт(дія()
  т.розділити()
кінець)

іт(дія()
  т.починається_з()
кінець)

іт(дія()
  т.закінчується_на()
кінець)
